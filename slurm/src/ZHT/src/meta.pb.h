// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

#ifndef PROTOBUF_meta_2eproto__INCLUDED
#define PROTOBUF_meta_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_meta_2eproto();
void protobuf_AssignDesc_meta_2eproto();
void protobuf_ShutdownFile_meta_2eproto();

class Package;

// ===================================================================

class Package : public ::google::protobuf::Message {
 public:
  Package();
  virtual ~Package();

  Package(const Package& from);

  inline Package& operator=(const Package& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Package& default_instance();

  void Swap(Package* other);

  // implements Message ----------------------------------------------

  inline Package* New() const { return New(NULL); }

  Package* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Package& from);
  void MergeFrom(const Package& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Package* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string virtualPath = 1;
  inline bool has_virtualpath() const;
  inline void clear_virtualpath();
  static const int kVirtualPathFieldNumber = 1;
  inline const ::std::string& virtualpath() const;
  inline void set_virtualpath(const ::std::string& value);
  inline void set_virtualpath(const char* value);
  inline void set_virtualpath(const char* value, size_t size);
  inline ::std::string* mutable_virtualpath();
  inline ::std::string* release_virtualpath();
  inline void set_allocated_virtualpath(::std::string* virtualpath);

  // optional string realFullPath = 2;
  inline bool has_realfullpath() const;
  inline void clear_realfullpath();
  static const int kRealFullPathFieldNumber = 2;
  inline const ::std::string& realfullpath() const;
  inline void set_realfullpath(const ::std::string& value);
  inline void set_realfullpath(const char* value);
  inline void set_realfullpath(const char* value, size_t size);
  inline ::std::string* mutable_realfullpath();
  inline ::std::string* release_realfullpath();
  inline void set_allocated_realfullpath(::std::string* realfullpath);

  // optional bool isDir = 3;
  inline bool has_isdir() const;
  inline void clear_isdir();
  static const int kIsDirFieldNumber = 3;
  inline bool isdir() const;
  inline void set_isdir(bool value);

  // optional int32 replicanum = 4;
  inline bool has_replicanum() const;
  inline void clear_replicanum();
  static const int kReplicanumFieldNumber = 4;
  inline ::google::protobuf::int32 replicanum() const;
  inline void set_replicanum(::google::protobuf::int32 value);

  // repeated string listItem = 5;
  inline int listitem_size() const;
  inline void clear_listitem();
  static const int kListItemFieldNumber = 5;
  inline const ::std::string& listitem(int index) const;
  inline ::std::string* mutable_listitem(int index);
  inline void set_listitem(int index, const ::std::string& value);
  inline void set_listitem(int index, const char* value);
  inline void set_listitem(int index, const char* value, size_t size);
  inline ::std::string* add_listitem();
  inline void add_listitem(const ::std::string& value);
  inline void add_listitem(const char* value);
  inline void add_listitem(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& listitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_listitem();

  // @@protoc_insertion_point(class_scope:Package)
 private:
  inline void set_has_virtualpath();
  inline void clear_has_virtualpath();
  inline void set_has_realfullpath();
  inline void clear_has_realfullpath();
  inline void set_has_isdir();
  inline void clear_has_isdir();
  inline void set_has_replicanum();
  inline void clear_has_replicanum();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr virtualpath_;
  ::google::protobuf::internal::ArenaStringPtr realfullpath_;
  bool isdir_;
  ::google::protobuf::int32 replicanum_;
  ::google::protobuf::RepeatedPtrField< ::std::string> listitem_;
  friend void  protobuf_AddDesc_meta_2eproto();
  friend void protobuf_AssignDesc_meta_2eproto();
  friend void protobuf_ShutdownFile_meta_2eproto();

  void InitAsDefaultInstance();
  static Package* default_instance_;
};
// ===================================================================


// ===================================================================

// Package

// optional string virtualPath = 1;
inline bool Package::has_virtualpath() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Package::set_has_virtualpath() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Package::clear_has_virtualpath() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Package::clear_virtualpath() {
  virtualpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_virtualpath();
}
inline const ::std::string& Package::virtualpath() const {
  // @@protoc_insertion_point(field_get:Package.virtualPath)
  return virtualpath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Package::set_virtualpath(const ::std::string& value) {
  set_has_virtualpath();
  virtualpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Package.virtualPath)
}
inline void Package::set_virtualpath(const char* value) {
  set_has_virtualpath();
  virtualpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Package.virtualPath)
}
inline void Package::set_virtualpath(const char* value, size_t size) {
  set_has_virtualpath();
  virtualpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Package.virtualPath)
}
inline ::std::string* Package::mutable_virtualpath() {
  set_has_virtualpath();
  // @@protoc_insertion_point(field_mutable:Package.virtualPath)
  return virtualpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Package::release_virtualpath() {
  clear_has_virtualpath();
  return virtualpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Package::set_allocated_virtualpath(::std::string* virtualpath) {
  if (virtualpath != NULL) {
    set_has_virtualpath();
  } else {
    clear_has_virtualpath();
  }
  virtualpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), virtualpath);
  // @@protoc_insertion_point(field_set_allocated:Package.virtualPath)
}

// optional string realFullPath = 2;
inline bool Package::has_realfullpath() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Package::set_has_realfullpath() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Package::clear_has_realfullpath() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Package::clear_realfullpath() {
  realfullpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_realfullpath();
}
inline const ::std::string& Package::realfullpath() const {
  // @@protoc_insertion_point(field_get:Package.realFullPath)
  return realfullpath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Package::set_realfullpath(const ::std::string& value) {
  set_has_realfullpath();
  realfullpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Package.realFullPath)
}
inline void Package::set_realfullpath(const char* value) {
  set_has_realfullpath();
  realfullpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Package.realFullPath)
}
inline void Package::set_realfullpath(const char* value, size_t size) {
  set_has_realfullpath();
  realfullpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Package.realFullPath)
}
inline ::std::string* Package::mutable_realfullpath() {
  set_has_realfullpath();
  // @@protoc_insertion_point(field_mutable:Package.realFullPath)
  return realfullpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Package::release_realfullpath() {
  clear_has_realfullpath();
  return realfullpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Package::set_allocated_realfullpath(::std::string* realfullpath) {
  if (realfullpath != NULL) {
    set_has_realfullpath();
  } else {
    clear_has_realfullpath();
  }
  realfullpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realfullpath);
  // @@protoc_insertion_point(field_set_allocated:Package.realFullPath)
}

// optional bool isDir = 3;
inline bool Package::has_isdir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Package::set_has_isdir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Package::clear_has_isdir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Package::clear_isdir() {
  isdir_ = false;
  clear_has_isdir();
}
inline bool Package::isdir() const {
  // @@protoc_insertion_point(field_get:Package.isDir)
  return isdir_;
}
inline void Package::set_isdir(bool value) {
  set_has_isdir();
  isdir_ = value;
  // @@protoc_insertion_point(field_set:Package.isDir)
}

// optional int32 replicanum = 4;
inline bool Package::has_replicanum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Package::set_has_replicanum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Package::clear_has_replicanum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Package::clear_replicanum() {
  replicanum_ = 0;
  clear_has_replicanum();
}
inline ::google::protobuf::int32 Package::replicanum() const {
  // @@protoc_insertion_point(field_get:Package.replicanum)
  return replicanum_;
}
inline void Package::set_replicanum(::google::protobuf::int32 value) {
  set_has_replicanum();
  replicanum_ = value;
  // @@protoc_insertion_point(field_set:Package.replicanum)
}

// repeated string listItem = 5;
inline int Package::listitem_size() const {
  return listitem_.size();
}
inline void Package::clear_listitem() {
  listitem_.Clear();
}
inline const ::std::string& Package::listitem(int index) const {
  // @@protoc_insertion_point(field_get:Package.listItem)
  return listitem_.Get(index);
}
inline ::std::string* Package::mutable_listitem(int index) {
  // @@protoc_insertion_point(field_mutable:Package.listItem)
  return listitem_.Mutable(index);
}
inline void Package::set_listitem(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Package.listItem)
  listitem_.Mutable(index)->assign(value);
}
inline void Package::set_listitem(int index, const char* value) {
  listitem_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Package.listItem)
}
inline void Package::set_listitem(int index, const char* value, size_t size) {
  listitem_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Package.listItem)
}
inline ::std::string* Package::add_listitem() {
  return listitem_.Add();
}
inline void Package::add_listitem(const ::std::string& value) {
  listitem_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Package.listItem)
}
inline void Package::add_listitem(const char* value) {
  listitem_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Package.listItem)
}
inline void Package::add_listitem(const char* value, size_t size) {
  listitem_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Package.listItem)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Package::listitem() const {
  // @@protoc_insertion_point(field_list:Package.listItem)
  return listitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Package::mutable_listitem() {
  // @@protoc_insertion_point(field_mutable_list:Package.listItem)
  return &listitem_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_meta_2eproto__INCLUDED
